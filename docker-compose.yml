version: "3.9"

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

  redis:
    image: redis
    restart: always

  auth:
    build:
      context: .
      args:
        BUILD_FOLDER: auth_service
    restart: on-failure
    depends_on:
      - postgres
      - redis
    environment:
      DB_URL: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"
      REDIS_URL: "redis:6379"
      VIRTUAL_HOST: auth.local
      PORT: 8082
      environment: prod
    expose:
      - 8082
    ports:
      - "8082:8082"

  products:
    build:
      context: .
      args:
        BUILD_FOLDER: products_service
    depends_on:
      - mongo
    restart: on-failure
    environment:
      AUTH_URL: http://auth:8082
      INVENTORY_URL: http://inventory:8083
      MONGO_URL: mongodb://admin:admin@mongo:27017
      VIRTUAL_HOST: product.local
      PORT: 8081
      environment: prod
    expose:
      - 8081
    ports:
      - "8081:8081"

  inventory:
    build:
      context: .
      args:
        BUILD_FOLDER: inventory_service
    restart: on-failure
    depends_on:
      - postgres
    environment:
      DB_URL: "postgres://postgres:postgres@postgres:5432/inventory?sslmode=disable"
      VIRTUAL_HOST: auth.local
      PORT: 8083
      environment: prod
    expose:
      - 8083
    ports:
      - "8083:8083"