use('StoreMonolith');

const userId = ObjectId("637a2fc4b0614ced185f733d")
const productId = ObjectId("63793384b0614ced185f7322")
const quantity = -1

const productMap = {
  $map: {
    input: "$products",
    in: {
      $cond: [
        {$gt: [{$add: ["$$this.quantity", quantity]}, 0]},
        { $mergeObjects: [
          "$$this",
          {
            $cond: [
              { $eq: ["$$this.id", productId] },
              {id: productId, quantity: quantity, value: 100},
              {}
            ]
          }
        ]},
        null
      ]
    }
  }
}

const productsSet = {
    products: {
      $cond: [
        { $in: [productId, "$products.id"] },
        productMap,
        {$concatArrays: ["$products", [{id: productId, quantity: quantity, value: 100}]]}
      ]
    }
  }

db.Carts.findOneAndUpdate(
  {user_id: userId, status: "active"},
  [
    {$set: productsSet},
    {$set: {"products": {
      "$filter": {
        "input": "$products",
        "cond": {
          $ne: ["$$this", null]
        }
      }
    }}},
    {
      $set: {
        total: {
          $reduce: {
            input: "$products",
            initialValue: 0,
            in: {
              $add: [
                "$$value",
                { $multiply: ["$$this.quantity", "$$this.value"] }
              ]
            }
          }
        }
      }
    },
    {$set: {updatedAt: "$$NOW"}},
  ],
  {returnDocument: "after"}
)
